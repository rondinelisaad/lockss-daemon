##################################################
# file: ExportServiceImplService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/wsdl2py --complexType ExportService.wsdl
# 
##################################################

from ExportServiceImplService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class ExportServiceImplServiceLocator:
    ExportServiceImplPort_address = "http://localhost:8081/ws/ExportService"
    def getExportServiceImplPortAddress(self):
        return ExportServiceImplServiceLocator.ExportServiceImplPort_address
    def getExportServiceImplPort(self, url=None, **kw):
        return ExportServiceImplServiceSoapBindingSOAP(url or ExportServiceImplServiceLocator.ExportServiceImplPort_address, **kw)

# Methods
class ExportServiceImplServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: createExportFiles
    def createExportFiles(self, request, **kw):
        if isinstance(request, createExportFiles) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(createExportFilesResponse.typecode)
        return response

createExportFiles = GED("http://export.ws.lockss.org/", "createExportFiles").pyclass

createExportFilesResponse = GED("http://export.ws.lockss.org/", "createExportFilesResponse").pyclass
